# Keycloak Crossplane Configuration for Antithesis Platform

keycloak:
  # Provider config reference (must exist in cluster)
  # Create with: kubectl apply -f provider-config.yaml
  providerConfigRef: keycloak-provider-config

  # Realm configuration
  realm:
    enabled: true
    name: antithesis
    displayName: 'Antithesis Platform'

    # Authentication settings
    registrationAllowed: false
    loginWithEmailAllowed: true
    resetPasswordAllowed: true
    verifyEmail: false

    # Token and session settings
    accessTokenLifespan: '5m'
    ssoSessionIdleTimeout: '30m'
    ssoSessionMaxLifespan: '10h'

  # OIDC Client for user authentication
  oidcClient:
    enabled: true
    id: antithesis-app
    name: 'Antithesis Application'
    description: 'OIDC client for Antithesis platform user authentication'

    # Redirect URIs for OAuth flow
    redirectUris:
      - 'http://localhost:3000/auth/callback'
      # Add production URLs:
      # - "https://antithesis.example.com/auth/callback"

    # Post-logout redirect URIs
    postLogoutRedirectUris:
      - 'http://localhost:3000'
      - 'http://localhost:3000/'
      # Add production URLs:
      # - "https://antithesis.example.com"

    # Web origins for CORS
    webOrigins:
      - 'http://localhost:3000'
      # Add production URLs:
      # - "https://antithesis.example.com"

    # OAuth scopes
    scopes: 'openid email profile'

  # Admin API Client (service account for Admin API access)
  adminClient:
    enabled: true
    id: antithesis-admin
    name: 'Antithesis Admin API'
    description: 'Service account for Keycloak Admin API access (organization management)'

  # Protocol mappers for claims in tokens
  mappers:
    # Organizations mapper - adds organization membership to UserInfo
    organizations:
      enabled: true
      claimName: 'organizations'
      # Maps user's organization memberships to a claim
      # This is critical for REQ-018: syncing user-tenant relationships

    # Email mapper - ensures email in UserInfo
    email:
      enabled: true

  # Optional: Client roles
  roles:
    enabled: false
    # Define roles if needed:
    # - admin
    # - user
    # - viewer

# Namespace where secrets will be created
# Must match the namespace where the app runs
namespace: default
