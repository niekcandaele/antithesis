/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Users {
  createdAt: Generated<Timestamp>;
  email: string;
  id: Generated<string>;
  isActive: Generated<boolean>;
  name: string;
  role: Generated<string>;
  tenantId: string;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  users: Users;
}

/**
 * Database schema type alias
 * Alias for DB interface to match common naming convention
 */
export type Database = DB;
